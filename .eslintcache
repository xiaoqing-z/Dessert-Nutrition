[{"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/index.tsx":"1","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/NutritionList/List.tsx":"2","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/NutritionList/style.tsx":"3","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/AddNutrition/AddNutrition.tsx":"4","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/AddNutrition/style.tsx":"5","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/App/App.tsx":"6","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Header/Head.jsx":"7","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Header/style.tsx":"8","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/NutritionItem/NutritionItem.tsx":"9","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/NutritionItem/style.tsx":"10","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Button/Button.jsx":"11","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Button/style.jsx":"12","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Panel/Panel.tsx":"13","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Panel/style.jsx":"14","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/AddNutrition/Inputs.tsx":"15"},{"size":551,"mtime":1612474470673,"results":"16","hashOfConfig":"17"},{"size":3916,"mtime":1612502455613,"results":"18","hashOfConfig":"17"},{"size":205,"mtime":1612473439525,"results":"19","hashOfConfig":"17"},{"size":2272,"mtime":1612500893583,"results":"20","hashOfConfig":"17"},{"size":281,"mtime":1612496562805,"results":"21","hashOfConfig":"17"},{"size":1289,"mtime":1612506566204,"results":"22","hashOfConfig":"17"},{"size":892,"mtime":1612506590465,"results":"23","hashOfConfig":"17"},{"size":193,"mtime":1612476681402,"results":"24","hashOfConfig":"17"},{"size":827,"mtime":1612502130241,"results":"25","hashOfConfig":"17"},{"size":114,"mtime":1612475348843,"results":"26","hashOfConfig":"17"},{"size":356,"mtime":1612506557106,"results":"27","hashOfConfig":"17"},{"size":527,"mtime":1612487489321,"results":"28","hashOfConfig":"17"},{"size":829,"mtime":1612506642407,"results":"29","hashOfConfig":"17"},{"size":165,"mtime":1612477718045,"results":"30","hashOfConfig":"17"},{"size":534,"mtime":1612500729759,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4isqe8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/index.tsx",[],["68","69"],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/NutritionList/List.tsx",["70","71"],"import React, { useEffect, useState } from 'react'\nimport { gql, useQuery } from '@apollo/client';\nimport { INutrition } from '../../interfaces/INutrition';\nimport NutritionItem from '../NutritionItem/NutritionItem';\nimport { INutritionType } from '../../interfaces/INutritionType';\nimport { ISort } from '../../interfaces/ISort';\nimport listStyle from \"./style\";\n\n\n\nconst NUTRITION_QUERY = gql`\n  {\n    getNutritions {\n      id\n      dessert\n      calories\n      fat\n      carbs\n      protein\n    }\n  }\n`\nconst NUTRITIONS_SUBSCRIPTION = gql`\n  subscription {\n    nutrition {\n      data {\n        id\n        dessert\n        calories\n        fat\n        carbs\n        protein\n      }\n      mutation\n    }\n  }\n`\n\nfunction NutritionList(props: { sendIds: Function }) {\n  const { data, loading } = useQuery(NUTRITION_QUERY);\n\n  const [nutritions, setNutritions] = useState<INutrition[] | undefined>(undefined);\n  const [sort, setSort] = useState<ISort>({\n    dessert: false,\n    calories: false,\n    fat: false,\n    carbs: false,\n    protein: false\n  })\n\n  useEffect(() => {\n    if (loading === false && data) {\n      setNutritions(data.getNutritions.map((item: INutrition) => {\n        return {\n          ...item,\n          checked: false\n        }\n      }));\n    }\n  }, [loading, data])\n\n\n  const handleSort = (attr: INutritionType): void => {\n    if (nutritions === undefined) return\n    const tempNutritions = nutritions.slice();\n\n    if (sort[attr]) {\n      tempNutritions.sort((a: INutrition, b: INutrition) => {\n        return attr === 'dessert' ? a[attr]?.localeCompare(b[attr]) : a[attr] - b[attr];\n      })\n    } else {\n      tempNutritions.sort((a: INutrition, b: INutrition) => {\n        return attr === 'dessert' ? b[attr]?.localeCompare(a[attr]) : b[attr] - a[attr];\n      })\n    }\n\n    setNutritions(tempNutritions)\n  }\n  const handleAllChecked = (event: any) => {\n    if (nutritions === undefined) return;\n\n    setNutritions(\n      nutritions.map((item: INutrition) => {\n        item.checked = event.target.checked;\n        return item\n      })\n    )\n\n    props.sendIds(generateIds())\n  }\n\n  const handleChecked = (event: any) => {\n    if (nutritions === undefined) return;\n\n    setNutritions(\n      nutritions.map((item: INutrition) => {\n        if (item.id === event.target.value) {\n          item.checked = event.target.checked\n        }\n        return item\n      })\n    )\n\n    props.sendIds(generateIds())\n  }\n\n  const generateIds = () => {\n    return nutritions\n      ?.filter((item) => item.checked === true)\n      .map((item) => item.id);\n  }\n  return (\n    <div>\n      <table className={listStyle.table} cellSpacing=\"0\">\n        <thead>\n          <tr>\n            <th className={listStyle.tableth}><input type=\"checkbox\" onClick={handleAllChecked} ></input></th>\n            <th className={listStyle.tableth}>dessert(100g serving)<i className={listStyle[\"arrows\"]} onClick={() => handleSort('dessert')}></i></th>\n            <th className={listStyle.tableth}>calories<i className={listStyle[\"arrows\"]} onClick={() => handleSort('calories')}></i></th>\n            <th className={listStyle.tableth}>fat (g)<i className={listStyle[\"arrows\"]} onClick={() => handleSort('fat')}></i></th>\n            <th className={listStyle.tableth}>carbs (g)<i className={listStyle[\"arrows\"]} onClick={() => handleSort('carbs')}></i></th>\n            <th className={listStyle.tableth}>protein (g)<i className={listStyle[\"arrows\"]} onClick={() => handleSort('protein')}></i></th>\n          </tr>\n        </thead>\n        <tbody className=\"lh-copy\">\n          {\n            nutritions && (\n              <>\n                {nutritions.map((item: INutrition) => (\n                  <NutritionItem handleChecked={handleChecked} nutrition={item} key={item.id}></NutritionItem>\n                ))}\n              </>\n            )\n          }\n        </tbody>\n      </table>\n    </div >\n  )\n}\n\nexport default NutritionList\n","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/NutritionList/style.tsx",[],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/AddNutrition/AddNutrition.tsx",[],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/AddNutrition/style.tsx",[],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/App/App.tsx",["72","73"],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Header/Head.jsx",[],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Header/style.tsx",[],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/NutritionItem/NutritionItem.tsx",["74"],"import React, { useState } from 'react'\nimport { INutrition } from '../../interfaces/INutrition'\nimport itemStyle from './style'\n\nfunction NutritionItem(props: { nutrition: INutrition, handleChecked: any }) {\n\n\n  return (\n    <tr className=\"bg-light-gray\">\n      <td className={itemStyle.basic}>\n        <input type=\"checkbox\" checked={props.nutrition.checked} value={props.nutrition.id} onChange={props.handleChecked}></input>\n      </td>\n      <td className={itemStyle.basic}>{props.nutrition.dessert}</td>\n      <td className={itemStyle.basic}>{props.nutrition.calories}</td>\n      <td className={itemStyle.basic}>{props.nutrition.fat}</td>\n      <td className={itemStyle.basic}>{props.nutrition.carbs}</td>\n      <td className={itemStyle.basic}>{props.nutrition.protein}</td>\n    </tr >\n  )\n}\n\nexport default NutritionItem\n","/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/NutritionItem/style.tsx",[],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Button/Button.jsx",[],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Button/style.jsx",[],["75","76"],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Panel/Panel.tsx",["77"],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/Panel/style.jsx",[],["78","79"],"/Users/zhangxiaoqing/Desktop/Jane/Microsoft interview/graphql-demo-master/src/components/AddNutrition/Inputs.tsx",["80"],"import React from 'react'\nimport addStyle from './style'\n\n\nfunction Inputs({ id, onChange, type, label, value, name, form }) {\n    return (\n        <div className=\"m3\">\n            <label className={addStyle.labels} htmlFor={name}>{label}</label>\n            <input type={type} value={value} name={name} id={id} onChange={(e) => {\n                onChange({ ...form, [name]: type == \"text\" ? e.target.value : +e.target.value })\n            }\n            } className={addStyle.inputs} />\n        </div>\n    )\n}\n\nexport default Inputs;\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":23,"column":7,"nodeType":"87","messageId":"88","endLine":23,"endColumn":30},{"ruleId":"85","severity":1,"message":"89","line":43,"column":16,"nodeType":"87","messageId":"88","endLine":43,"endColumn":23},{"ruleId":"85","severity":1,"message":"90","line":4,"column":42,"nodeType":"87","messageId":"88","endLine":4,"endColumn":46},{"ruleId":"85","severity":1,"message":"91","line":9,"column":8,"nodeType":"87","messageId":"88","endLine":9,"endColumn":14},{"ruleId":"85","severity":1,"message":"92","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"81","replacedBy":"93"},{"ruleId":"83","replacedBy":"94"},{"ruleId":"85","severity":1,"message":"95","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"96","severity":1,"message":"97","line":10,"column":50,"nodeType":"98","messageId":"99","endLine":10,"endColumn":52},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"@typescript-eslint/no-unused-vars","'NUTRITIONS_SUBSCRIPTION' is assigned a value but never used.","Identifier","unusedVar","'setSort' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.",["100"],["101"],"'ReactNode' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]